version: "3"
services: 
    redis: 
        image: 'redis'
    db:
        image: postgres
        
        environment: 
            POSTGRES_PASSWORD: postgres
            POSTGRES_USER: postgres
            POSTGRES_DB: slack-clone
        volumes: 
            - ./pgdata:/var/lib/postgresql/data
        ports:
            - "5432"

    server:
        build: 
            context: ./BackEnd__slack_clone_graphql
            dockerfile: Dockerfile
        depends_on: 
            - db
            - redis
        volumes: 
            - '/usr/src/app/node_modules'
            - './files/:/usr/src/app/files'
        environment:
             DB_HOST: db
             REDIS_HOST: redis
        # command: ["./wait-for-it.sh", "db:5432", "--", "node", "index.js"]
        # command: ["node", "index.js"]

        # command: npm run start

    nginx:
        image: nginx
        volumes:
          - ./BackEnd__slack_clone_graphql/mysite.template:/etc/nginx/conf.d/mysite.template
          - ./files:/files
        ports:
          - "8081:80"
        depends_on:
          - server 
        command: /bin/bash -c "cat < /etc/nginx/conf.d/mysite.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

    client:
        build: 
            context: ./Client__slack_clone
            dockerfile: Dockerfile
        depends_on: 
            - server
        stdin_open: true
        environment:
            - NODE_ENV=development
            - CHOKIDAR_USEPOLLING=true
        ports: 
            - "3000:3000"
        volumes: 
            - './Client__slack_clone:/usr/src/app'
            - '/usr/src/app/node_modules'
        # command: npm run start
